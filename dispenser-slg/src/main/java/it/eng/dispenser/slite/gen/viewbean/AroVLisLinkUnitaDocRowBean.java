/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.dispenser.slite.gen.viewbean;

import java.math.BigDecimal;
import java.sql.Timestamp;

import it.eng.dispenser.viewEntity.AroVLisLinkUnitaDoc;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Aro_V_Lis_Link_Unita_Doc
 *
 */
public class AroVLisLinkUnitaDocRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$ViewBeanWriter", comments =
     * "This class was generated by OraTool", date = "Thursday, 8 October 2015 10:02" )
     */

    private static final long serialVersionUID = 1L;
    public static AroVLisLinkUnitaDocTableDescriptor TABLE_DESCRIPTOR = new AroVLisLinkUnitaDocTableDescriptor();

    public AroVLisLinkUnitaDocRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    public BigDecimal getIdUnitaDoc() {
        return getBigDecimal("id_unita_doc");
    }

    public void setIdUnitaDoc(BigDecimal idUnitaDoc) {
        setObject("id_unita_doc", idUnitaDoc);
    }

    public BigDecimal getIdLinkUnitaDoc() {
        return getBigDecimal("id_link_unita_doc");
    }

    public void setIdLinkUnitaDoc(BigDecimal idLinkUnitaDoc) {
        setObject("id_link_unita_doc", idLinkUnitaDoc);
    }

    public String getCdRegistroKeyUnitaDocLink() {
        return getString("cd_registro_key_unita_doc_link");
    }

    public void setCdRegistroKeyUnitaDocLink(String cdRegistroKeyUnitaDocLink) {
        setObject("cd_registro_key_unita_doc_link", cdRegistroKeyUnitaDocLink);
    }

    public BigDecimal getAaKeyUnitaDocLink() {
        return getBigDecimal("aa_key_unita_doc_link");
    }

    public void setAaKeyUnitaDocLink(BigDecimal aaKeyUnitaDocLink) {
        setObject("aa_key_unita_doc_link", aaKeyUnitaDocLink);
    }

    public String getCdKeyUnitaDocLink() {
        return getString("cd_key_unita_doc_link");
    }

    public void setCdKeyUnitaDocLink(String cdKeyUnitaDocLink) {
        setObject("cd_key_unita_doc_link", cdKeyUnitaDocLink);
    }

    public String getDsLinkUnitaDoc() {
        return getString("ds_link_unita_doc");
    }

    public void setDsLinkUnitaDoc(String dsLinkUnitaDoc) {
        setObject("ds_link_unita_doc", dsLinkUnitaDoc);
    }

    public String getFlRisolto() {
        return getString("fl_risolto");
    }

    public void setFlRisolto(String flRisolto) {
        setObject("fl_risolto", flRisolto);
    }

    public BigDecimal getIdUnitaDocColleg() {
        return getBigDecimal("id_unita_doc_colleg");
    }

    public void setIdUnitaDocColleg(BigDecimal idUnitaDocColleg) {
        setObject("id_unita_doc_colleg", idUnitaDocColleg);
    }

    public Timestamp getDtRegUnitaDoc() {
        return getTimestamp("dt_reg_unita_doc");
    }

    public void setDtRegUnitaDoc(Timestamp dtRegUnitaDoc) {
        setObject("dt_reg_unita_doc", dtRegUnitaDoc);
    }

    public BigDecimal getIdStrut() {
        return getBigDecimal("id_strut");
    }

    public void setIdStrut(BigDecimal idStrut) {
        setObject("id_strut", idStrut);
    }

    @Override
    public void entityToRowBean(Object obj) {
        AroVLisLinkUnitaDoc entity = (AroVLisLinkUnitaDoc) obj;
        this.setIdUnitaDoc(entity.getIdUnitaDoc());
        this.setIdLinkUnitaDoc(entity.getIdLinkUnitaDoc());
        this.setCdRegistroKeyUnitaDocLink(entity.getCdRegistroKeyUnitaDocLink());
        this.setAaKeyUnitaDocLink(entity.getAaKeyUnitaDocLink());
        this.setCdKeyUnitaDocLink(entity.getCdKeyUnitaDocLink());
        this.setDsLinkUnitaDoc(entity.getDsLinkUnitaDoc());
        this.setFlRisolto(entity.getFlRisolto());
        this.setIdUnitaDocColleg(entity.getIdUnitaDocColleg());
        if (entity.getDtRegUnitaDoc() != null) {
            this.setDtRegUnitaDoc(new Timestamp(entity.getDtRegUnitaDoc().getTime()));
        }
        this.setIdStrut(entity.getIdStrut());
    }

    @Override
    public AroVLisLinkUnitaDoc rowBeanToEntity() {
        AroVLisLinkUnitaDoc entity = new AroVLisLinkUnitaDoc();
        entity.setIdUnitaDoc(this.getIdUnitaDoc());
        entity.setIdLinkUnitaDoc(this.getIdLinkUnitaDoc());
        entity.setCdRegistroKeyUnitaDocLink(this.getCdRegistroKeyUnitaDocLink());
        entity.setAaKeyUnitaDocLink(this.getAaKeyUnitaDocLink());
        entity.setCdKeyUnitaDocLink(this.getCdKeyUnitaDocLink());
        entity.setDsLinkUnitaDoc(this.getDsLinkUnitaDoc());
        entity.setFlRisolto(this.getFlRisolto());
        entity.setIdUnitaDocColleg(this.getIdUnitaDocColleg());
        entity.setDtRegUnitaDoc(this.getDtRegUnitaDoc());
        entity.setIdStrut(this.getIdStrut());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
