/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.dispenser.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.dispenser.entity.DipParamApplic;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Dip_Param_Applic
 *
 */
public class DipParamApplicRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 27 May 2015 11:25" )
     */

    private static final long serialVersionUID = 1L;
    public static DipParamApplicTableDescriptor TABLE_DESCRIPTOR = new DipParamApplicTableDescriptor();

    public DipParamApplicRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdParamApplic() {
        return getBigDecimal("id_param_applic");
    }

    public void setIdParamApplic(BigDecimal idParamApplic) {
        setObject("id_param_applic", idParamApplic);
    }

    public String getNmParamApplic() {
        return getString("nm_param_applic");
    }

    public void setNmParamApplic(String nmParamApplic) {
        setObject("nm_param_applic", nmParamApplic);
    }

    public String getDsParamApplic() {
        return getString("ds_param_applic");
    }

    public void setDsParamApplic(String dsParamApplic) {
        setObject("ds_param_applic", dsParamApplic);
    }

    public String getDsValoreParamApplic() {
        return getString("ds_valore_param_applic");
    }

    public void setDsValoreParamApplic(String dsValoreParamApplic) {
        setObject("ds_valore_param_applic", dsValoreParamApplic);
    }

    public String getTiParamApplic() {
        return getString("ti_param_applic");
    }

    public void setTiParamApplic(String tiParamApplic) {
        setObject("ti_param_applic", tiParamApplic);
    }

    @Override
    public void entityToRowBean(Object obj) {
        DipParamApplic entity = (DipParamApplic) obj;
        this.setIdParamApplic(new BigDecimal(entity.getIdParamApplic()));
        this.setNmParamApplic(entity.getNmParamApplic());
        this.setDsParamApplic(entity.getDsParamApplic());
        this.setDsValoreParamApplic(entity.getDsValoreParamApplic());
        this.setTiParamApplic(entity.getTiParamApplic());
    }

    @Override
    public DipParamApplic rowBeanToEntity() {
        DipParamApplic entity = new DipParamApplic();
        if (this.getIdParamApplic() != null) {
            entity.setIdParamApplic(this.getIdParamApplic().longValue());
        }
        entity.setNmParamApplic(this.getNmParamApplic());
        entity.setDsParamApplic(this.getDsParamApplic());
        entity.setDsValoreParamApplic(this.getDsValoreParamApplic());
        entity.setTiParamApplic(this.getTiParamApplic());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
