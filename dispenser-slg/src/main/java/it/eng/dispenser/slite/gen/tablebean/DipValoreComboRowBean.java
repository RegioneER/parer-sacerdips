/*
 * Engineering Ingegneria Informatica S.p.A.
 *
 * Copyright (C) 2023 Regione Emilia-Romagna
 * <p/>
 * This program is free software: you can redistribute it and/or modify it under the terms of
 * the GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 * <p/>
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * <p/>
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */

package it.eng.dispenser.slite.gen.tablebean;

import java.math.BigDecimal;

import it.eng.dispenser.entity.DipCampoRicerca;
import it.eng.dispenser.entity.DipValoreCombo;
import it.eng.spagoLite.db.base.JEEBaseRowInterface;
import it.eng.spagoLite.db.base.row.BaseRow;
import it.eng.spagoLite.db.oracle.bean.column.TableDescriptor;

/**
 * RowBean per la tabella Dip_Valore_Combo
 *
 */
public class DipValoreComboRowBean extends BaseRow implements JEEBaseRowInterface {

    /*
     * @Generated( value = "it.eg.dbtool.db.oracle.beangen.Oracle4JPAClientBeanGen$TableBeanWriter", comments =
     * "This class was generated by OraTool", date = "Wednesday, 27 May 2015 11:25" )
     */

    private static final long serialVersionUID = 1L;
    public static DipValoreComboTableDescriptor TABLE_DESCRIPTOR = new DipValoreComboTableDescriptor();

    public DipValoreComboRowBean() {
        super();
    }

    public TableDescriptor getTableDescriptor() {
        return TABLE_DESCRIPTOR;
    }

    // getter e setter
    public BigDecimal getIdValoreCombo() {
        return getBigDecimal("id_valore_combo");
    }

    public void setIdValoreCombo(BigDecimal idValoreCombo) {
        setObject("id_valore_combo", idValoreCombo);
    }

    public BigDecimal getIdCampoRicerca() {
        return getBigDecimal("id_campo_ricerca");
    }

    public void setIdCampoRicerca(BigDecimal idCampoRicerca) {
        setObject("id_campo_ricerca", idCampoRicerca);
    }

    public String getNmValoreCombo() {
        return getString("nm_valore_combo");
    }

    public void setNmValoreCombo(String nmValoreCombo) {
        setObject("nm_valore_combo", nmValoreCombo);
    }

    public String getCdValoreCombo() {
        return getString("cd_valore_combo");
    }

    public void setCdValoreCombo(String cdValoreCombo) {
        setObject("cd_valore_combo", cdValoreCombo);
    }

    @Override
    public void entityToRowBean(Object obj) {
        DipValoreCombo entity = (DipValoreCombo) obj;
        this.setIdValoreCombo(new BigDecimal(entity.getIdValoreCombo()));
        if (entity.getDipCampoRicerca() != null) {
            this.setIdCampoRicerca(new BigDecimal(entity.getDipCampoRicerca().getIdCampoRicerca()));
        }
        this.setNmValoreCombo(entity.getNmValoreCombo());
        this.setCdValoreCombo(entity.getCdValoreCombo());
    }

    @Override
    public DipValoreCombo rowBeanToEntity() {
        DipValoreCombo entity = new DipValoreCombo();
        if (this.getIdValoreCombo() != null) {
            entity.setIdValoreCombo(this.getIdValoreCombo().longValue());
        }
        if (this.getIdCampoRicerca() != null) {
            if (entity.getDipCampoRicerca() == null) {
                entity.setDipCampoRicerca(new DipCampoRicerca());
            }
            entity.getDipCampoRicerca().setIdCampoRicerca(this.getIdCampoRicerca().longValue());
        }
        entity.setNmValoreCombo(this.getNmValoreCombo());
        entity.setCdValoreCombo(this.getCdValoreCombo());
        return entity;
    }

    // gestione della paginazione
    public void setRownum(Integer rownum) {
        setObject("rownum", rownum);
    }

    public Integer getRownum() {
        return Integer.parseInt(getObject("rownum").toString());
    }

    public void setRnum(Integer rnum) {
        setObject("rnum", rnum);
    }

    public Integer getRnum() {
        return Integer.parseInt(getObject("rnum").toString());
    }

    public void setNumrecords(Integer numRecords) {
        setObject("numrecords", numRecords);
    }

    public Integer getNumrecords() {
        return Integer.parseInt(getObject("numrecords").toString());
    }

}
